{"version":3,"file":"component---src-pages-delete-tsx-b61b3c6f271b55d1b464.js","mappings":"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","sources":["webpack://my-gatsby-site/./src/components/Profile/UserDeleteForm.tsx","webpack://my-gatsby-site/./src/pages/delete.tsx"],"sourcesContent":["import {Field, navigate} from '@jaenjs/jaen'\nimport {Alert, Snackbar, TextField} from '@mui/material'\nimport {red} from '@mui/material/colors'\nimport {deleteAccount} from '@snek-functions/origin'\nimport {Link} from 'gatsby'\nimport React, {useState} from 'react'\nimport {useTranslation} from 'react-i18next'\nimport {Path} from '../../model/model.routes'\nimport AuthFormContainer from '../Authentification/AuthFormContainer'\nimport PasswordField from '../Authentification/PasswordField'\nimport LoadingButton from '../LoadingButton'\n\ninterface userDeleteValues {\n  password: string\n}\n\ninterface userDeleteRequestValues {\n  email: string\n}\n\nconst getDeleteTokenFromWindowLocation = (): string | null => {\n  if (typeof window === 'undefined') {\n    return null\n  }\n\n  // get the token from the window location query string\n  const searchParams = new URLSearchParams(window.location.search)\n  const token = searchParams.get('token')\n\n  return token\n}\n\nexport default function UserDeleteForm() {\n  const location = typeof window !== 'undefined' ? window.location : null\n\n  const {t} = useTranslation()\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState('')\n  const [deleteRequested, setDeleteRequested] = React.useState(false)\n  const [userDeleteValues, setUserDeleteValues] = useState<userDeleteValues>({\n    password: ''\n  })\n\n  const [userDeleteRequestValues, setUserDeleteRequestValues] =\n    useState<userDeleteRequestValues>({\n      email: ''\n    })\n\n  // If the token is present in the window location, we are in the delete step.\n  // Otherwise, we are in the request step.\n  const [deleteToken, setDeleteToken] = useState(\n    getDeleteTokenFromWindowLocation()\n  )\n\n  React.useEffect(() => {\n    setDeleteToken(getDeleteTokenFromWindowLocation())\n  }, [location])\n\n  const handleDeleteOnChange = (\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    key: keyof userDeleteValues\n  ) => {\n    setUserDeleteValues(prev => ({...prev, [key]: e.target.value}))\n  }\n\n  const handleDeleteRequestOnChange = (\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    key: keyof userDeleteRequestValues\n  ) => {\n    setUserDeleteRequestValues(prev => ({...prev, [key]: e.target.value}))\n  }\n\n  const delUser = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    setIsLoading(true)\n    try {\n      setError('')\n\n      if (deleteToken === null) {\n        await deleteAccount({\n          email: userDeleteRequestValues.email\n        })\n        setDeleteRequested(true)\n      } else {\n        if (userDeleteValues.password) {\n          await deleteAccount({\n            password: userDeleteValues.password,\n            token: deleteToken\n          })\n\n          // Redirect to the login page\n          navigate(Path.Login)\n        } else {\n          throw new Error('Passwords do not match')\n        }\n      }\n    } catch (e) {\n      setError(e.message)\n    } finally {\n      setIsLoading(() => false)\n    }\n  }\n\n  return (\n    <>\n      <AuthFormContainer\n        header={<Field.Text name=\"delete\" defaultValue=\"Delete account\" />}\n        onSubmit={e => delUser(e)}>\n        {deleteToken === null ? (\n          <>\n            <Field.Text\n              name=\"deleteRequest\"\n              defaultValue=\"Delete your account by entering your email address below. You will\n            receive an email with a link to delete your account.\"\n            />\n\n            <TextField\n              disabled={deleteRequested}\n              value={userDeleteRequestValues.email}\n              onChange={e => handleDeleteRequestOnChange(e, 'email')}\n              fullWidth\n              required\n              variant={'outlined'}\n              type={'email'}\n              label={t('Email Address')}\n            />\n          </>\n        ) : (\n          <>\n            <PasswordField\n              value={userDeleteValues.password}\n              handleOnChange={e => handleDeleteOnChange(e, 'password')}\n              required\n              fullWidth\n              label={'Password *'}\n            />\n          </>\n        )}\n\n        <LoadingButton\n          disabled={deleteRequested}\n          text={t('Delete account')}\n          isLoading={isLoading}\n          fullWidth\n          variant={'contained'}\n          type={'submit'}\n        />\n        {error.length ? (\n          <div style={{color: red.A700}} className={'flex justify-center'}>\n            *{t(error)}\n          </div>\n        ) : null}\n        <div className={'flex justify-center'}>\n          <div\n            className={\n              'flex space-x-5 underline cursor-pointer text-primary duration-300'\n            }>\n            <Link to={Path.Login}>\n              <p>{t('Back to login')}</p>\n            </Link>\n          </div>\n        </div>\n      </AuthFormContainer>\n      <Snackbar open={deleteRequested} autoHideDuration={2000}>\n        <Alert variant=\"filled\" severity=\"success\" sx={{width: '100%'}}>\n          Delete account email sent! Please check your inbox.\n        </Alert>\n      </Snackbar>\n    </>\n  )\n}\n","import {connectPage, Field} from '@jaenjs/jaen'\nimport {Grid} from '@mui/material'\nimport {graphql, PageProps} from 'gatsby'\nimport React from 'react'\n\nimport AuthContent from '../components/Authentification/AuthContent'\nimport AuthPageLayout from '../components/Layout/AuthPageLayout'\nimport NavbarPadding from '../components/Layout/NavbarPadding'\nimport PageLayout from '../components/Layout/PageLayout'\nimport UserDeleteForm from '../components/Profile/UserDeleteForm'\n\nexport function DeletePage(props: PageProps) {\n  return (\n    <PageLayout pathname={props.path}>\n      <AuthPageLayout>\n        <div className={'2xl:hidden'}>\n          <NavbarPadding />\n        </div>\n        <Grid container columnSpacing={12}>\n          <Grid item md={7}>\n            <div\n              className={\n                'pt-8 md:pt-0 md:h-screen flex flex-col justify-center'\n              }>\n              <UserDeleteForm />\n            </div>\n          </Grid>\n          <Grid item md={5}>\n            <AuthContent\n              header={\n                <Field.Text\n                  name=\"header\"\n                  defaultValue=\"Start quantum computing with us!\"\n                />\n              }\n              content={\n                <Field.Text\n                  name=\"content\"\n                  defaultValue=\"Our intuitive approach makes it easy for beginners to start with quantum computing and allows experts and educators to run complex photonic experiments on real quantum hardware.\"\n                />\n              }\n            />\n          </Grid>\n        </Grid>\n      </AuthPageLayout>\n    </PageLayout>\n  )\n}\n\nexport const query = graphql`\n  query ($jaenPageId: String!) {\n    ...JaenPageQuery\n  }\n`\n\nexport default connectPage(DeletePage, {displayName: 'DeletePage'})\n"],"names":["getDeleteTokenFromWindowLocation","window","URLSearchParams","location","search","get","UserDeleteForm","t","useTranslation","useState","isLoading","setIsLoading","error","setError","React","deleteRequested","setDeleteRequested","password","userDeleteValues","setUserDeleteValues","email","userDeleteRequestValues","setUserDeleteRequestValues","deleteToken","setDeleteToken","delUser","e","preventDefault","deleteAccount","token","navigate","Path","Error","_context","message","_jsxs","AuthFormContainer","header","_jsx","Field","name","defaultValue","onSubmit","TextField","disabled","value","onChange","key","prev","target","handleDeleteRequestOnChange","fullWidth","required","variant","type","label","PasswordField","handleOnChange","handleDeleteOnChange","LoadingButton","text","length","style","color","red","className","Link","to","Snackbar","open","autoHideDuration","Alert","severity","sx","width","DeletePage","props","PageLayout","pathname","path","children","AuthPageLayout","NavbarPadding","Grid","container","columnSpacing","item","md","AuthContent","content","connectPage","displayName"],"sourceRoot":""}