{"version":3,"file":"component---src-pages-login-tsx-2f02dc5bc3df799e7e68.js","mappings":"mZAee,SAASA,IACtB,IAAOC,GAAKC,EAAAA,EAAAA,KAALD,EACP,GAAkCE,EAAAA,EAAAA,WAAS,GAApCC,EAAS,KAAEC,EAAY,KAE9B,IAD4BC,EAAAA,EAAAA,YAAWC,EAAAA,GAAhCC,UACmBL,EAAAA,EAAAA,UAAS,KAA5BM,EAAK,KAAEC,EAAQ,KACtB,GAAqCP,EAAAA,EAAAA,UAA2B,CAC9DQ,SAAU,GACVC,SAAU,KAFLC,EAAW,KAAEC,EAAa,KAO3BC,GAF6B,oBAAXC,SAAyBC,EAAAA,EAAAA,eAE1B,SACrBC,EACAC,GAEAL,GAAc,SAAAM,GAAI,8BAASA,IAAI,MAAGD,GAAMD,EAAEG,OAAOC,MAAK,MACxD,GAEMC,EAAK,mCAAG,WAAOL,GAAmC,iEAEpC,OADlBA,EAAEM,iBACFnB,GAAa,GAAK,mBAEVoB,EAAAA,EAAAA,IAA4B,CAChCd,SAAUE,EAAYF,SACtBC,SAAUC,EAAYD,WACtB,OACFF,EAAS,KACTgB,EAAAA,EAAAA,UAASC,EAAAA,GAAAA,YAAgB,gDAEzBjB,EAASkB,EAAAA,GAAEC,SAAQ,QAEM,OAFN,UAEnBxB,GAAa,kBAAM,CAAK,IAAC,4EAE5B,gBAfU,sCAiBX,OACEyB,EAAAA,EAAAA,IAACC,EAAAA,EAAiB,CAChBC,QAAQC,EAAAA,EAAAA,IAACC,EAAAA,MAAAA,KAAU,CAACC,KAAK,QAAQC,aAAa,sBAC9CC,SAAU,SAAAnB,GAAC,OAAIK,EAAML,EAAE,EAAC,WACxBe,EAAAA,EAAAA,IAACK,EAAAA,EAAS,CACRhB,MAAOT,EAAYF,SACnB4B,SAAU,SAAArB,GAAC,OAAIH,EAAeG,EAAG,WAAW,EAC5CsB,WAAS,EACTC,UAAQ,EACRC,QAAS,WACTC,KAAM,QACNC,MAAO3C,EAAE,oBAEXgC,EAAAA,EAAAA,IAACY,EAAAA,EAAa,CACZvB,MAAOT,EAAYD,SACnBG,eAAgB,SAAAG,GAAC,OAAIH,EAAeG,EAAG,WAAW,EAClDuB,UAAQ,EACRD,WAAS,EACTI,MAAO,gBAETX,EAAAA,EAAAA,IAACa,EAAAA,EAAa,CACZC,KAAM9C,EAAE,UACRG,UAAWA,EACXoC,WAAS,EACTE,QAAS,YACTC,KAAM,WAEPlC,EAAMuC,QACLlB,EAAAA,EAAAA,IAAAA,MAAAA,CAAKmB,MAAO,CAACC,MAAOC,EAAAA,EAAAA,MAAWC,UAAW,sBAAsB,cAC5DnD,EAAEQ,MAEJ,MACJwB,EAAAA,EAAAA,IAAAA,MAAAA,CAAKmB,UAAW,sBAAsB,UACpCtB,EAAAA,EAAAA,IAAAA,MAAAA,CAAKsB,UAAW,oEAAoE,WAClFnB,EAAAA,EAAAA,IAACoB,EAAAA,KAAI,CAACC,GAAI3B,EAAAA,GAAAA,SAAc,UACtBM,EAAAA,EAAAA,IAAAA,IAAAA,CAAGmB,UAAU,GAAE,SACZnD,EAAE,gBAGPgC,EAAAA,EAAAA,IAACoB,EAAAA,KAAI,CAACC,GAAI3B,EAAAA,GAAAA,MAAW,UACnBM,EAAAA,EAAAA,IAAAA,IAAAA,CAAGmB,UAAU,GAAE,SACZnD,EAAE,oCAOjB,C,qCCxFO,SAASsD,EAAUC,GACxB,OACEvB,EAAAA,EAAAA,IAACwB,EAAAA,EAAU,CAACC,SAAUF,EAAMG,KAAKC,UAC/B9B,EAAAA,EAAAA,IAAC+B,EAAAA,EAAc,CAAAD,SAAAA,EACb3B,EAAAA,EAAAA,IAAAA,MAAAA,CAAKmB,UAAW,aAAaQ,UAC3B3B,EAAAA,EAAAA,IAAC6B,EAAAA,EAAa,OAEhBhC,EAAAA,EAAAA,IAACiC,EAAAA,GAAI,CAACC,WAAS,EAACC,cAAe,GAAGL,SAAAA,EAChC3B,EAAAA,EAAAA,IAAC8B,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAEP,UACf3B,EAAAA,EAAAA,IAAAA,MAAAA,CACEmB,UACE,wDACDQ,UACD3B,EAAAA,EAAAA,IAACjC,EAAS,SAGdiC,EAAAA,EAAAA,IAAC8B,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAEP,UACf3B,EAAAA,EAAAA,IAACmC,EAAAA,EAAW,CACVpC,QACEC,EAAAA,EAAAA,IAACC,EAAAA,MAAAA,KAAU,CACTC,KAAK,SACLC,aAAa,qCAGjBiC,SACEpC,EAAAA,EAAAA,IAACC,EAAAA,MAAAA,KAAU,CACTC,KAAK,UACLC,aAAa,iMAS/B,CAEO,IAMP,GAAekC,EAAAA,EAAAA,aAAYf,EAAW,CAACgB,YAAa,a","sources":["webpack://my-gatsby-site/./src/components/Authentification/LoginForm.tsx","webpack://my-gatsby-site/./src/pages/login.tsx"],"sourcesContent":["import { Field } from '@jaenjs/jaen'\nimport { TextField } from '@mui/material'\nimport { red } from '@mui/material/colors'\nimport { useLocation } from '@reach/router'\nimport { Link, navigate } from 'gatsby'\nimport React, { useContext, useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { loginWthUserNameAndPassword } from '../../model/model.api'\nimport { Path } from '../../model/model.routes'\nimport { LoginCredentials } from '../../model/types/type.auth'\nimport { AuthContext } from '../../providers/AuthProvider'\nimport LoadingButton from '../LoadingButton'\nimport AuthFormContainer from './AuthFormContainer'\nimport PasswordField from './PasswordField'\n\nexport default function LoginForm() {\n  const {t} = useTranslation()\n  const [isLoading, setIsLoading] = useState(false)\n  const {setValue: setUser} = useContext(AuthContext)\n  const [error, setError] = useState('')\n  const [loginValues, setLoginValue] = useState<LoginCredentials>({\n    username: '',\n    password: ''\n  })\n\n  const location = typeof window !== 'undefined' ? useLocation() : null\n\n  const handleOnChange = (\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    key: keyof LoginCredentials\n  ) => {\n    setLoginValue(prev => ({...prev, [key]: e.target.value}))\n  }\n\n  const login = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    setIsLoading(true)\n    try {\n      await loginWthUserNameAndPassword({\n        username: loginValues.username,\n        password: loginValues.password\n      })\n      setError('')\n      navigate(Path.MyProjects)\n    } catch (e) {\n      setError(e.message)\n    } finally {\n      setIsLoading(() => false)\n    }\n  }\n\n  return (\n    <AuthFormContainer\n      header={<Field.Text name=\"login\" defaultValue=\"Log in to PhotonQ\" />}\n      onSubmit={e => login(e)}>\n      <TextField\n        value={loginValues.username}\n        onChange={e => handleOnChange(e, 'username')}\n        fullWidth\n        required\n        variant={'outlined'}\n        type={'email'}\n        label={t('Email Address')}\n      />\n      <PasswordField\n        value={loginValues.password}\n        handleOnChange={e => handleOnChange(e, 'password')}\n        required\n        fullWidth\n        label={'Password *'}\n      />\n      <LoadingButton\n        text={t('Log in')}\n        isLoading={isLoading}\n        fullWidth\n        variant={'contained'}\n        type={'submit'}\n      />\n      {error.length ? (\n        <div style={{color: red.A700}} className={'flex justify-center'}>\n          *{t(error)}\n        </div>\n      ) : null}\n      <div className={'flex justify-center'}>\n        <div className={'flex space-x-5 underline cursor-pointer text-primary duration-300'}>\n          <Link to={Path.Register}>\n            <p className=''>\n              {t('Sign up')}\n            </p>\n          </Link>\n          <Link to={Path.Reset}>\n            <p className=''>\n              {t('Forgot your password?')}\n            </p>\n          </Link>\n        </div>\n      </div>\n    </AuthFormContainer>\n  )\n}\n","import {connectPage, Field} from '@jaenjs/jaen'\nimport {Grid} from '@mui/material'\nimport {graphql, PageProps} from 'gatsby'\nimport React from 'react'\n\nimport AuthContent from '../components/Authentification/AuthContent'\nimport LoginForm from '../components/Authentification/LoginForm'\nimport AuthPageLayout from '../components/Layout/AuthPageLayout'\nimport NavbarPadding from '../components/Layout/NavbarPadding'\nimport PageLayout from '../components/Layout/PageLayout'\n\nexport function LoginPage(props: PageProps) {\n  return (\n    <PageLayout pathname={props.path}>\n      <AuthPageLayout>\n        <div className={'2xl:hidden'}>\n          <NavbarPadding />\n        </div>\n        <Grid container columnSpacing={12}>\n          <Grid item md={7}>\n            <div\n              className={\n                'pt-8 md:pt-0 md:h-screen flex flex-col justify-center'\n              }>\n              <LoginForm />\n            </div>\n          </Grid>\n          <Grid item md={5}>\n            <AuthContent\n              header={\n                <Field.Text\n                  name=\"header\"\n                  defaultValue=\"Start quantum computing with us!\"\n                />\n              }\n              content={\n                <Field.Text\n                  name=\"content\"\n                  defaultValue=\"Our intuitive approach makes it easy for beginners to start with quantum computing and allows experts and educators to run complex photonic experiments on real quantum hardware.\"\n                />\n              }\n            />\n          </Grid>\n        </Grid>\n      </AuthPageLayout>\n    </PageLayout>\n  )\n}\n\nexport const query = graphql`\n  query ($jaenPageId: String!) {\n    ...JaenPageQuery\n  }\n`\n\nexport default connectPage(LoginPage, {displayName: 'LoginPage'})\n"],"names":["LoginForm","t","useTranslation","useState","isLoading","setIsLoading","useContext","AuthContext","setValue","error","setError","username","password","loginValues","setLoginValue","handleOnChange","window","useLocation","e","key","prev","target","value","login","preventDefault","loginWthUserNameAndPassword","navigate","Path","_context","message","_jsxs","AuthFormContainer","header","_jsx","Field","name","defaultValue","onSubmit","TextField","onChange","fullWidth","required","variant","type","label","PasswordField","LoadingButton","text","length","style","color","red","className","Link","to","LoginPage","props","PageLayout","pathname","path","children","AuthPageLayout","NavbarPadding","Grid","container","columnSpacing","item","md","AuthContent","content","connectPage","displayName"],"sourceRoot":""}