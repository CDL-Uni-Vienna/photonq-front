{"version":3,"file":"component---src-jaen-templates-profile-tsx-d20574bfa63418e82b7c.js","mappings":"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","sources":["webpack://my-gatsby-site/./src/components/LoadingButton.tsx","webpack://my-gatsby-site/./src/jaen-templates/Profile.tsx","webpack://my-gatsby-site/./src/components/Profile/ProfileContentContainer.tsx","webpack://my-gatsby-site/./src/components/Profile/ProfileSection.tsx","webpack://my-gatsby-site/./src/components/Profile/ProfileSectionHeader.tsx","webpack://my-gatsby-site/./src/components/Profile/Sections/ProfileDetailSection.tsx","webpack://my-gatsby-site/./src/pages/profile.tsx"],"sourcesContent":["import React from \"react\";\nimport {\n  Button,\n  ButtonProps,\n  ButtonTypeMap,\n  CircularProgress,\n} from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface LoadingButtonProps\n  extends ButtonProps<ButtonTypeMap[\"defaultComponent\"], {}> {\n  isLoading: boolean;\n  text: string;\n}\n\nexport default function LoadingButton({\n  isLoading,\n  text,\n  ...props\n}: LoadingButtonProps) {\n  const { t } = useTranslation();\n  return (\n    <Button {...props} variant={\"contained\"}>\n      {isLoading ? (\n        <CircularProgress size={20} style={{ color: \"white\" }} />\n      ) : (\n        t(text)\n      )}\n    </Button>\n  );\n}\n","import {connectTemplate} from '@jaenjs/jaen'\nimport {graphql} from 'gatsby'\n\nimport {ProfilePage} from '../pages/profile'\n\nexport const query = graphql`\n  query ($jaenPageId: String!) {\n    ...JaenPageQuery\n  }\n`\n\nexport default connectTemplate(ProfilePage, {\n  displayName: 'Profile',\n  children: []\n})\n","import {navigate} from '@jaenjs/jaen'\nimport {Alert, Button, Snackbar} from '@mui/material'\nimport {red} from '@mui/material/colors'\nimport {deleteUser, resetPassword} from '@snek-functions/origin'\nimport clsx from 'clsx'\nimport React, {ReactNode, useContext, useState} from 'react'\nimport {useTranslation} from 'react-i18next'\nimport {Path} from '../../model/model.routes'\nimport LoadingButton from '../LoadingButton'\n\nimport {AuthContext} from '../../providers/AuthProvider'\n\ninterface ProfileContentContainerProps {\n  children: ReactNode\n  withSpaceBetween?: boolean\n}\n\nexport default function ProfileContentContainer({\n  children,\n  withSpaceBetween\n}: ProfileContentContainerProps) {\n  const {t} = useTranslation()\n  const [isLoadingReset, setIsLoadingReset] = useState(false)\n  const [isLoadingDelete, setIsLoadingDelete] = useState(false)\n  const [error, setError] = useState('')\n  const [resetRequested, setResetRequested] = useState(false)\n  const [deleteRequested, setDeleteRequested] = useState(false)\n\n  const {value: user, setValue: setUser} = useContext(AuthContext)\n\n  const onDeleteUser = async () => {\n    setIsLoadingDelete(true)\n    try {\n      setError('')\n\n      await deleteUser({\n        email: user!.email\n      })\n      setDeleteRequested(true)\n    } catch (e) {\n      setError(e.message)\n    } finally {\n      setIsLoadingDelete(() => false)\n    }\n  }\n  const onResetPassword = async () => {\n    setIsLoadingReset(true)\n    try {\n      setError('')\n\n      await resetPassword({\n        email: user!.email\n      })\n\n      setResetRequested(true)\n    } catch (e) {\n      setError(e.message)\n    } finally {\n      setIsLoadingReset(() => false)\n    }\n  }\n\n  return (\n    <>\n      <div\n        className={clsx('border p-6', {\n          'space-y-5': withSpaceBetween\n        })}>\n        {children}\n      </div>\n      <Button\n        sx={{mr: 2}}\n        onClick={() => navigate(Path.Reset)}\n        variant={'contained'}\n        size={'medium'}>\n        {t('Update Details')}\n      </Button>\n      <Button\n        sx={{mr: 2}}\n        onClick={() => onResetPassword()}\n        variant={'contained'}\n        size={'medium'}>\n        {t('Update Password')}\n      </Button>\n      <Button\n        sx={{mr: 2}}\n        onClick={() => onDeleteUser()}\n        variant={'contained'}\n        size={'medium'}>\n        {t('Delete Account')}\n      </Button>\n      <LoadingButton\n        disabled={resetRequested}\n        text={t('Update password')}\n        isLoading={isLoadingReset}\n        fullWidth\n        variant={'contained'}\n      />\n      <LoadingButton\n        disabled={deleteRequested}\n        text={t('Delete account')}\n        isLoading={isLoadingDelete}\n        fullWidth\n        variant={'contained'}\n      />\n      {error.length ? (\n        <div style={{color: red.A700}} className={'flex justify-center'}>\n          *{t(error)}\n        </div>\n      ) : null}\n      <Snackbar open={resetRequested} autoHideDuration={2000}>\n        <Alert variant=\"filled\" severity=\"success\" sx={{width: '100%'}}>\n          Reset password email sent! Please check your inbox.\n        </Alert>\n      </Snackbar>\n      <Snackbar open={deleteRequested} autoHideDuration={2000}>\n        <Alert variant=\"filled\" severity=\"success\" sx={{width: '100%'}}>\n          Delete account email sent! Please check your inbox.\n        </Alert>\n      </Snackbar>\n    </>\n  )\n}\n","import React, { ReactNode } from \"react\";\nimport clsx from \"clsx\";\n\ninterface ProfileSectionProps {\n  children: ReactNode;\n  withBottomSpace?: boolean;\n}\n\nexport default function ProfileSection({\n  children,\n  withBottomSpace,\n}: ProfileSectionProps) {\n  return (\n    <div\n      className={clsx(\"pt-16 px-8 space-y-3\", {\n        \"pb-16\": withBottomSpace,\n      })}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Button, Typography } from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface ProfileSectionHeaderProps {\n  header: string;\n  withEditButton?: boolean;\n  onClick?: () => void;\n}\n\nexport default function ProfileSectionHeader({\n  header,\n  withEditButton,\n  onClick,\n}: ProfileSectionHeaderProps) {\n  const { t } = useTranslation();\n  return (\n    <div className={\"flex justify-between\"}>\n      <Typography variant={\"h5\"} component={\"h2\"} fontWeight={\"bold\"}>\n        {t(header)}\n      </Typography>\n      {withEditButton && <Button onClick={onClick}>{t(\"Edit\")}</Button>}\n    </div>\n  );\n}\n","import {Table, TableBody, TableCell, TableRow, TextField} from '@mui/material'\nimport React, {useContext, useState} from 'react'\nimport {useTranslation} from 'react-i18next'\nimport {User} from '../../../model/types/type.user'\nimport {AuthContext} from '../../../providers/AuthProvider'\nimport ProfileContentContainer from '../ProfileContentContainer'\nimport ProfileSection from '../ProfileSection'\nimport ProfileSectionHeader from '../ProfileSectionHeader'\n\nconst tableKeys: (keyof User)[] = ['firstName', 'lastName', 'email']\n\nexport default function ProfileDetailSection() {\n  const {t} = useTranslation()\n  const {value: user, setValue: setUser} = useContext(AuthContext)\n  const [isEditing] = useState(false)\n\n  if (!user) return null\n\n  const handleOnChange = (\n    e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    key: keyof User\n  ) => {\n    setUser(prev => ({\n      ...prev!,\n      [key]: e.target.value!\n    }))\n  }\n\n  return (\n    <ProfileSection withBottomSpace>\n      <ProfileSectionHeader header={t('Details')} />\n      <ProfileContentContainer>\n        <Table>\n          <TableBody>\n            {Object.keys(user)\n              .filter(key => tableKeys.includes(key as keyof User))\n              .map((key, index) => (\n                <TableRow key={index}>\n                  <TableCell>\n                    {key === 'email' ? 'E-MAIL' : t(key).toUpperCase()}\n                  </TableCell>\n                  <TableCell>\n                    {isEditing ? (\n                      <TextField\n                        onChange={e => handleOnChange(e, key as keyof User)}\n                        value={user[key as keyof User]}\n                        variant={'standard'}\n                        fullWidth\n                      />\n                    ) : (\n                      user[key as keyof User]\n                    )}\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </ProfileContentContainer>\n    </ProfileSection>\n  )\n}\n","import {connectPage, Field} from '@jaenjs/jaen'\nimport {Container} from '@mui/system'\nimport {graphql, PageProps} from 'gatsby'\nimport React from 'react'\nimport ContentContainer from '../components/Layout/ContentContainer'\nimport NavbarPadding from '../components/Layout/NavbarPadding'\nimport PageLayout from '../components/Layout/PageLayout'\nimport SectionHeader from '../components/Layout/SectionHeader'\nimport ProfileDetailSection from '../components/Profile/Sections/ProfileDetailSection'\n\nexport function ProfilePage(props: PageProps) {\n  return (\n    <PageLayout pathname={props.path}>\n      <Container maxWidth=\"xl\">\n        <NavbarPadding />\n        <SectionHeader\n          header={\n            <Field.Text name=\"sectionHeader\" defaultValue={'My Profile'} />\n          }\n          withVerticalSpacing\n        />\n        <ContentContainer>\n          <ProfileDetailSection />\n        </ContentContainer>\n        <NavbarPadding />\n      </Container>\n    </PageLayout>\n  )\n}\n\nexport const query = graphql`\n  query ($jaenPageId: String!) {\n    ...JaenPageQuery\n  }\n`\n\nexport default connectPage(ProfilePage, {displayName: 'ProfilePage'})\n"],"names":["LoadingButton","isLoading","text","props","t","useTranslation","_jsx","Button","variant","CircularProgress","size","style","color","connectTemplate","ProfilePage","displayName","children","ProfileContentContainer","withSpaceBetween","useState","isLoadingReset","setIsLoadingReset","isLoadingDelete","setIsLoadingDelete","error","setError","resetRequested","setResetRequested","deleteRequested","setDeleteRequested","useContext","AuthContext","user","value","onDeleteUser","setValue","deleteUser","email","_context","message","onResetPassword","resetPassword","_context2","_jsxs","className","clsx","sx","mr","onClick","navigate","Path","disabled","fullWidth","length","red","Snackbar","open","autoHideDuration","Alert","severity","width","ProfileSection","withBottomSpace","ProfileSectionHeader","header","withEditButton","Typography","component","fontWeight","tableKeys","ProfileDetailSection","setUser","isEditing","Table","TableBody","Object","keys","filter","key","includes","map","index","TableRow","TableCell","toUpperCase","TextField","onChange","e","prev","target","handleOnChange","PageLayout","pathname","path","Container","maxWidth","NavbarPadding","SectionHeader","Field","name","defaultValue","withVerticalSpacing","ContentContainer","connectPage"],"sourceRoot":""}